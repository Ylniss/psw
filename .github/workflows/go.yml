# This workflow will build, test, and release a golang project
name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Extract version
      id: get_version
      run: |
        version=$(grep -oP 'psw v\K[0-9.]+' ./cmd/version.go)
        echo "version=${version}" >> $GITHUB_ENV

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libx11-dev xorg-dev

    - name: Go Release Binaries
      uses: wangyoucao577/go-release-action@v1.53
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        release_tag: v${{ env.version }}  # Use extracted version as the release tag
        multi_binaries: true               # Enable multi-binary packaging
        binary_name: "psw"                # Use the binary name for assets
        extra_files: ./bin/clipclean     # Include the additional binary
        project_path: ./                  # Root directory of the project
        pre_command: "sudo apt-get install -y libx11-dev xorg-dev"
        build_command: make i
        sha256sum: true                  # Publish SHA256 checksum
        overwrite: true                  # Overwrite existing assets if necessary
        compress_assets: true            # Compress assets before uploading
